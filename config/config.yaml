neural_network:
    # Parameters for the neural network
    batch_size:     
        # Number of training examples to consider in each iteration (int)
        64

    epochs:     
        # Number of times to iterate over tge entire training set (int)
        100

    init:
        "he_normal"

    kernel_size:    
        # Kernel size to be used throughout (list of ints)
        - 4
        - 4
        - 4
        - 4
        - 4
        - 4 
        - 5
        - 5
        - 5

    hidden_size:    
        # Number of nerons in the fully-connected layer (list of ints)
        - 1024
        - 1024
        - 1024

    pool_size:
         # Pooling size to be used throughout (list of ints)
        - 2
        - 2
        - 2

    conv_depth:
        # Number of filteOrs in the convolutional layer (list of ints)
        - 64
        - 64
        - 64
        - 64
        - 64
        - 64
        - 128
        - 128
        - 128

    drop_prob:
        # Probability of a node dropping out when training (list of ints)
        - 0.25        
        - 0.25
        - 0.25
        - 0.5
        - 0.5
        - 0.5

    learn_rate:
        # Learning rate (float)
        0.0000004

    augment:
        # To augment data or not (bool)
        False

    channel_shift:
        - -15
        - 15
    activation:
        # Activation function to use (string)
        "relu"

train:
    batches:
        # Number of batches per epoch to train over
        20
    data:
        # Path to training data
        "data/train"

evaluate:
    batches:
        # Number of batches to use for evaluation
        20
    data:
        # Path to evaluation data:
        - "data/evaluate/57510"
        - "data/evaluate/57511"
        - "data/evaluate/57514"
        - "data/evaluate/57516"
        - "data/evaluate/57517"
        - "data/evaluate/57518"
        - "data/evaluate/57520"
        - "data/evaluate/57529"
        - "data/evaluate/57535"
        - "data/evaluate/57544"
        - "data/evaluate/57545"
    threshold:
        0.85

diagnose:
    samples:
        - "samples/57510"
        - "samples/57511"
        - "samples/57514"
        - "samples/57516"
        - "samples/57517"
        - "samples/57518"
        - "samples/57520"
        - "samples/57529"
        - "samples/57535"
        - "samples/57544"
        - "samples/57545"

classes:
    # Class names in order for one-hot encoding
    - "healthy"
    - "falciparum"

images:
    # Image sizes
    height:
        # Height of training images (int)
        80

    width:
        # Width of training images (int)
        80

    depth:
        # Depth of training images (int)
        3

cell_detector:
    # Parameters for cell detector
    kernel_size:
        # Kernel size for applying Gaussian blur (int)
        5

    tolerance:
        # Tolerance in micrometers of red blood cell radius (float)
        0.5

    radius:
        # Radius of a red blood cell in micrometers (float)
        3.5

    minimum_distance:
        # Minimum permissible distance between red blood cell centres (int)
        # Will be set automatically if zero. 
        0

    pixels_per_micrometer:
        # The number of pixels for each micrometer of image (int)
        10

    area_threshold:
        # Percentage of the circle that should contain cell (float)
        65